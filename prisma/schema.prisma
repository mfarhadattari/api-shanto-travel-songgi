generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum
enum USER_STATUS {
  active
  blocked
}

enum USER_ROLE {
  super_admin
  admin
  user
}

enum TRIP_REQ_STATUS {
  pending
  approved
  rejected
}

enum TRIP_TYPES {
  adventure
  leisure
  business
  eco_tourism
  cultural
  medical
  others
}

// db model
model User {
  id                String      @id() @default(uuid())
  email             String      @unique
  username          String
  password          String
  status            USER_STATUS @default(active)
  role              USER_ROLE   @default(user)
  isPasswordChanged Boolean     @default(false)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  trip              Trip[]
  tripReq           TripReq[]

  @@map("users")
}

model Trip {
  id          String     @id @default(uuid())
  userId      String
  destination String
  description String
  startDate   DateTime
  endDate     DateTime
  dates       String
  type        TRIP_TYPES
  photos      String[]
  isDeleted   Boolean    @default(false)

  tripReq TripReq[]

  user User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("trips")
}

model TripReq {
  tripId String
  userId String
  status TRIP_REQ_STATUS @default(pending)

  user User @relation(fields: [userId], references: [id])
  trip Trip @relation(fields: [tripId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, tripId])
  @@map("tripReqs")
}
